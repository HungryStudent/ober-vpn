from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.callback_data import CallbackData

from config_parser import outline_prices

device = CallbackData("device", "device_id")
delete_device = CallbackData("delete_device", "device_id")
delete_device_action = CallbackData("delete_device_action", "device_id", "action")
new_device_country = CallbackData("new_device_country", "country_id")
payment = CallbackData("payment", "amount")
add_limit = CallbackData("add_limit", "device_id", "value")
limit_data = CallbackData("limit", "value")
help_post = CallbackData("help_post", "post")

inline_cancel = InlineKeyboardMarkup(row_width=1).add(InlineKeyboardButton("–û—Ç–º–µ–Ω–∞", callback_data="cancel"))

start = InlineKeyboardMarkup(row_width=1).add(InlineKeyboardButton("üéâ –ü–û–î–ö–õ–Æ–ß–ò–¢–¨ VPN üéâ", callback_data="start_vpn"))

show_menu = InlineKeyboardMarkup(row_width=1).add(InlineKeyboardButton("üè†–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="show_menu"))

menu = InlineKeyboardMarkup(row_width=2).add(
    InlineKeyboardButton("üì±–ú–æ–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞", callback_data="devices"),
    InlineKeyboardButton("üíµ–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å", callback_data="balance_menu"),
    InlineKeyboardButton("üë®‚Äç‚öï–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞", callback_data="ref_menu"),
    # InlineKeyboardButton("–ü–æ–º–æ—â—å", callback_data="help"),

).add(InlineKeyboardButton("üßæ–ò—Å—Ç–æ—Ä–∏—è –ø–ª–∞—Ç–µ–∂–µ–π", callback_data="history"))

choose_device_type = InlineKeyboardMarkup(row_width=2).add(
    InlineKeyboardButton("WireGuard", callback_data="wireguard"),
    InlineKeyboardButton("Outline", callback_data="outline")
)

balance_amounts = [100, 200, 300, 500, 1000, 2000]
balance = InlineKeyboardMarkup(row_width=3).add(
    *[InlineKeyboardButton(text=f"{amount}‚ÇΩ", callback_data=payment.new(amount)) for amount in balance_amounts])
balance.add(InlineKeyboardButton("–£–∫–∞–∑–∞—Ç—å —Å–≤–æ—é —Å—É–º–º—É", callback_data=payment.new(0)))

limit = InlineKeyboardMarkup(row_width=2).add(
    *[InlineKeyboardButton(f"{amount} –ì–ë: {price} —Ä—É–±", callback_data=limit_data.new(amount))
      for (amount, price) in outline_prices.items()]
)

support = InlineKeyboardMarkup(row_width=1).add(
    InlineKeyboardButton("–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ", callback_data=help_post.new("install")),
    InlineKeyboardButton("–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ", callback_data=help_post.new("install")),
    InlineKeyboardButton("–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ", callback_data=help_post.new("install")))

first_device_wg = InlineKeyboardMarkup(row_width=1).add(
    InlineKeyboardButton("–î–æ–±–∞–≤–∏—Ç—å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ", callback_data="first_device_wg"))


def get_devices(devices):
    kb = InlineKeyboardMarkup(row_width=2)
    for my_device in devices:
        device_type = "(WG)" if my_device["device_type"] == "wireguard" else "(OL)"
        kb.add(InlineKeyboardButton(f"{device_type} {my_device['name']}",
                                    callback_data=device.new(my_device["device_id"])),
               InlineKeyboardButton("‚ùå –£–¥–∞–ª–∏—Ç—å", callback_data=delete_device.new(my_device["device_id"])))
    kb.add(InlineKeyboardButton("–î–æ–±–∞–≤–∏—Ç—å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ", callback_data="new_device"))
    return kb


def get_countries(countries):
    kb = InlineKeyboardMarkup(row_width=1)
    for country in countries:
        kb.add(InlineKeyboardButton(country["name"], callback_data=new_device_country.new(country["country_id"])))
    return kb


def get_delete_device(device_id):
    kb = InlineKeyboardMarkup(row_width=2)
    kb.add(InlineKeyboardButton("–î–∞, —É–¥–∞–ª–∏—Ç—å", callback_data=delete_device_action.new(device_id, "approve")),
           InlineKeyboardButton("–ù–µ —É–¥–∞–ª—è—Ç—å", callback_data=delete_device_action.new(device_id, "cancel")))
    return kb


def get_add_limit(device_id):
    kb = InlineKeyboardMarkup(row_width=1)
    for price in outline_prices:
        kb.add(InlineKeyboardButton(f"–î–æ–±–∞–≤–∏—Ç—å {price}–ì–ë", callback_data=add_limit.new(device_id, price)))
    return kb


def get_payment_url(url):
    kb = InlineKeyboardMarkup(row_width=1)
    kb.add(InlineKeyboardButton("–û–ø–ª–∞—Ç–∏—Ç—å", url=url))
    return kb
